diff --git a/Cargo.lock b/Cargo.lock
index a8b416c..e6ed884 100644
--- a/Cargo.lock
+++ b/Cargo.lock
@@ -55,21 +55,21 @@ dependencies = [
 
 [[package]]
 name = "agave-feature-set"
-version = "3.0.0"
-source = "git+https://github.com/anza-xyz/agave.git#2471624e18fc6df49178e1481ed8243e73413d0f"
+version = "3.1.0"
+source = "git+https://github.com/anza-xyz/agave.git#47c0383f2301e5a739543c1af9992ae182b7e06c"
 dependencies = [
  "ahash",
  "solana-epoch-schedule 3.0.0",
  "solana-hash 3.0.0",
  "solana-pubkey 3.0.0",
- "solana-sha256-hasher 3.0.0",
+ "solana-sha256-hasher 3.0.0 (registry+https://github.com/rust-lang/crates.io-index)",
  "solana-svm-feature-set",
 ]
 
 [[package]]
 name = "agave-precompiles"
-version = "3.0.0"
-source = "git+https://github.com/anza-xyz/agave.git#2471624e18fc6df49178e1481ed8243e73413d0f"
+version = "3.1.0"
+source = "git+https://github.com/anza-xyz/agave.git#47c0383f2301e5a739543c1af9992ae182b7e06c"
 dependencies = [
  "agave-feature-set",
  "bincode",
@@ -82,15 +82,15 @@ dependencies = [
  "solana-message 3.0.0",
  "solana-precompile-error",
  "solana-pubkey 3.0.0",
- "solana-sdk-ids 3.0.0",
+ "solana-sdk-ids 3.0.0 (registry+https://github.com/rust-lang/crates.io-index)",
  "solana-secp256k1-program",
  "solana-secp256r1-program",
 ]
 
 [[package]]
 name = "agave-syscalls"
-version = "3.0.0"
-source = "git+https://github.com/anza-xyz/agave.git#2471624e18fc6df49178e1481ed8243e73413d0f"
+version = "3.1.0"
+source = "git+https://github.com/anza-xyz/agave.git#47c0383f2301e5a739543c1af9992ae182b7e06c"
 dependencies = [
  "bincode",
  "libsecp256k1",
@@ -102,7 +102,7 @@ dependencies = [
  "solana-bn254",
  "solana-clock 3.0.0",
  "solana-cpi 3.0.0",
- "solana-curve25519 3.0.0",
+ "solana-curve25519 3.1.0",
  "solana-hash 3.0.0",
  "solana-instruction 3.0.0",
  "solana-keccak-hasher 3.0.0",
@@ -112,11 +112,11 @@ dependencies = [
  "solana-program-runtime",
  "solana-pubkey 3.0.0",
  "solana-sbpf",
- "solana-sdk-ids 3.0.0",
+ "solana-sdk-ids 3.0.0 (registry+https://github.com/rust-lang/crates.io-index)",
  "solana-secp256k1-recover 3.0.0",
- "solana-sha256-hasher 3.0.0",
+ "solana-sha256-hasher 3.0.0 (registry+https://github.com/rust-lang/crates.io-index)",
  "solana-stable-layout 3.0.0",
- "solana-stake-interface 2.0.0",
+ "solana-stake-interface 2.0.1",
  "solana-svm-callback",
  "solana-svm-feature-set",
  "solana-svm-log-collector",
@@ -380,11 +380,13 @@ checksum = "eab1c04a571841102f5345a8fc0f6bb3d31c315dec879b5c6e42e40ce7ffa34e"
 
 [[package]]
 name = "async-compression"
-version = "0.4.27"
+version = "0.4.28"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "ddb939d66e4ae03cee6091612804ba446b12878410cfa17f785f4dd67d4014e8"
+checksum = "6448dfb3960f0b038e88c781ead1e7eb7929dfc3a71a1336ec9086c00f6d1e75"
 dependencies = [
  "brotli",
+ "compression-codecs",
+ "compression-core",
  "flate2",
  "futures-core",
  "memchr",
@@ -454,9 +456,9 @@ dependencies = [
 
 [[package]]
 name = "bitflags"
-version = "2.9.2"
+version = "2.9.3"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "6a65b545ab31d687cff52899d4890855fec459eb6afe0da6417b8a18da87aa29"
+checksum = "34efbcccd345379ca2868b2b2c9d3782e9cc58ba87bc7d79d5b53d9c9ae6f25d"
 
 [[package]]
 name = "blake3"
@@ -644,9 +646,9 @@ checksum = "37b2a672a2cb129a2e41c10b1224bb368f9f37a2b16b612598138befd7b37eb5"
 
 [[package]]
 name = "cc"
-version = "1.2.33"
+version = "1.2.34"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "3ee0f8803222ba5a7e2777dd72ca451868909b1ac410621b676adf07280e9b5f"
+checksum = "42bc4aea80032b7bf409b0bc7ccad88853858911b7713a8062fdc0623867bedc"
 dependencies = [
  "shlex",
 ]
@@ -784,6 +786,26 @@ dependencies = [
  "unreachable",
 ]
 
+[[package]]
+name = "compression-codecs"
+version = "0.4.28"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "46cc6539bf1c592cff488b9f253b30bc0ec50d15407c2cf45e27bd8f308d5905"
+dependencies = [
+ "brotli",
+ "compression-core",
+ "flate2",
+ "futures-core",
+ "memchr",
+ "pin-project-lite",
+]
+
+[[package]]
+name = "compression-core"
+version = "0.4.28"
+source = "registry+https://github.com/rust-lang/crates.io-index"
+checksum = "2957e823c15bde7ecf1e8b64e537aa03a6be5fda0e2334e99887669e75b12e01"
+
 [[package]]
 name = "console_error_panic_hook"
 version = "0.1.7"
@@ -1842,9 +1864,9 @@ dependencies = [
 
 [[package]]
 name = "indexmap"
-version = "2.10.0"
+version = "2.11.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "fe4cd85333e22411419a0bcae1297d25e58c9443848b11dc6a86fefe8c78a661"
+checksum = "f2481980430f9f78649238835720ddccc57e52df14ffce1c6f37391d61b563e9"
 dependencies = [
  "equivalent",
  "hashbrown 0.15.5",
@@ -1861,9 +1883,9 @@ dependencies = [
 
 [[package]]
 name = "io-uring"
-version = "0.7.9"
+version = "0.7.10"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "d93587f37623a1a17d94ef2bc9ada592f5465fe7732084ab7beefabe5c77c0c4"
+checksum = "046fa2d4d00aea763528b4950358d0ead425372445dc8ff86312b3c69ff7727b"
 dependencies = [
  "bitflags",
  "cfg-if",
@@ -2152,6 +2174,7 @@ version = "0.4.2"
 dependencies = [
  "agave-feature-set",
  "agave-precompiles",
+ "agave-syscalls",
  "bincode",
  "criterion",
  "ed25519-dalek 1.0.1",
@@ -2185,11 +2208,12 @@ dependencies = [
  "solana-program-runtime",
  "solana-pubkey 3.0.0",
  "solana-rent 3.0.0",
- "solana-sdk-ids 3.0.0",
+ "solana-sdk-ids 3.0.0 (registry+https://github.com/rust-lang/crates.io-index)",
  "solana-secp256k1-program",
  "solana-secp256r1-program",
+ "solana-sha256-hasher 3.0.0 (registry+https://github.com/rust-lang/crates.io-index)",
  "solana-slot-hashes 3.0.0",
- "solana-stake-interface 1.2.1",
+ "solana-stake-interface 2.0.1",
  "solana-stake-program",
  "solana-svm-callback",
  "solana-svm-log-collector",
@@ -2230,7 +2254,7 @@ dependencies = [
  "serde_yaml",
  "solana-logger",
  "solana-pubkey 3.0.0",
- "solana-sdk-ids 3.0.0",
+ "solana-sdk-ids 3.0.0 (registry+https://github.com/rust-lang/crates.io-index)",
  "tokio",
 ]
 
@@ -2262,7 +2286,7 @@ dependencies = [
  "solana-pubkey 3.0.0",
  "solana-rent 3.0.0",
  "solana-slot-hashes 3.0.0",
- "solana-stake-interface 1.2.1",
+ "solana-stake-interface 2.0.1",
  "which",
 ]
 
@@ -3466,8 +3490,7 @@ dependencies = [
 [[package]]
 name = "solana-account"
 version = "3.0.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "f885ce7f937871ecb56aadbeaaec963b234a580b7d6ebbdb8fa4249a36f92433"
+source = "git+https://github.com/anza-xyz/solana-sdk.git#94b5923e5572963d90572a4dfd47a4c77c817eaa"
 dependencies = [
  "bincode",
  "qualifier_attr",
@@ -3478,7 +3501,7 @@ dependencies = [
  "solana-clock 3.0.0",
  "solana-instruction-error",
  "solana-pubkey 3.0.0",
- "solana-sdk-ids 3.0.0",
+ "solana-sdk-ids 3.0.0 (git+https://github.com/anza-xyz/solana-sdk.git)",
  "solana-sysvar 3.0.0",
 ]
 
@@ -3498,8 +3521,7 @@ dependencies = [
 [[package]]
 name = "solana-account-info"
 version = "3.0.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "82f4691b69b172c687d218dd2f1f23fc7ea5e9aa79df9ac26dab3d8dd829ce48"
+source = "git+https://github.com/anza-xyz/solana-sdk.git#94b5923e5572963d90572a4dfd47a4c77c817eaa"
 dependencies = [
  "solana-program-error 3.0.0",
  "solana-program-memory 3.0.0",
@@ -3509,8 +3531,7 @@ dependencies = [
 [[package]]
 name = "solana-address"
 version = "1.0.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "0a7a457086457ea9db9a5199d719dc8734dc2d0342fad0d8f77633c31eb62f19"
+source = "git+https://github.com/anza-xyz/solana-sdk.git#94b5923e5572963d90572a4dfd47a4c77c817eaa"
 dependencies = [
  "curve25519-dalek 4.1.3",
  "five8",
@@ -3518,10 +3539,10 @@ dependencies = [
  "serde",
  "serde_derive",
  "solana-atomic-u64 3.0.0",
- "solana-define-syscall 3.0.0",
+ "solana-define-syscall 3.0.0 (git+https://github.com/anza-xyz/solana-sdk.git)",
  "solana-program-error 3.0.0",
  "solana-sanitize 3.0.0",
- "solana-sha256-hasher 3.0.0",
+ "solana-sha256-hasher 3.0.0 (git+https://github.com/anza-xyz/solana-sdk.git)",
 ]
 
 [[package]]
@@ -3553,8 +3574,7 @@ dependencies = [
 [[package]]
 name = "solana-atomic-u64"
 version = "3.0.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "a933ff1e50aff72d02173cfcd7511bd8540b027ee720b75f353f594f834216d0"
+source = "git+https://github.com/anza-xyz/solana-sdk.git#94b5923e5572963d90572a4dfd47a4c77c817eaa"
 dependencies = [
  "parking_lot",
 ]
@@ -3578,7 +3598,7 @@ checksum = "30c80fb6d791b3925d5ec4bf23a7c169ef5090c013059ec3ed7d0b2c04efa085"
 dependencies = [
  "num-bigint 0.4.6",
  "num-traits",
- "solana-define-syscall 3.0.0",
+ "solana-define-syscall 3.0.0 (registry+https://github.com/rust-lang/crates.io-index)",
 ]
 
 [[package]]
@@ -3595,8 +3615,7 @@ dependencies = [
 [[package]]
 name = "solana-bincode"
 version = "3.0.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "534a37aecd21986089224d0c01006a75b96ac6fb2f418c24edc15baf0d2a4c99"
+source = "git+https://github.com/anza-xyz/solana-sdk.git#94b5923e5572963d90572a4dfd47a4c77c817eaa"
 dependencies = [
  "bincode",
  "serde",
@@ -3622,7 +3641,7 @@ source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "ffa2e3bdac3339c6d0423275e45dafc5ac25f4d43bf344d026a3cc9a85e244a6"
 dependencies = [
  "blake3",
- "solana-define-syscall 3.0.0",
+ "solana-define-syscall 3.0.0 (registry+https://github.com/rust-lang/crates.io-index)",
  "solana-hash 3.0.0",
 ]
 
@@ -3637,7 +3656,7 @@ dependencies = [
  "ark-ff",
  "ark-serialize",
  "bytemuck",
- "solana-define-syscall 3.0.0",
+ "solana-define-syscall 3.0.0 (registry+https://github.com/rust-lang/crates.io-index)",
  "thiserror 2.0.16",
 ]
 
@@ -3653,8 +3672,8 @@ dependencies = [
 
 [[package]]
 name = "solana-bpf-loader-program"
-version = "3.0.0"
-source = "git+https://github.com/anza-xyz/agave.git#2471624e18fc6df49178e1481ed8243e73413d0f"
+version = "3.1.0"
+source = "git+https://github.com/anza-xyz/agave.git#47c0383f2301e5a739543c1af9992ae182b7e06c"
 dependencies = [
  "agave-syscalls",
  "bincode",
@@ -3670,7 +3689,7 @@ dependencies = [
  "solana-program-runtime",
  "solana-pubkey 3.0.0",
  "solana-sbpf",
- "solana-sdk-ids 3.0.0",
+ "solana-sdk-ids 3.0.0 (registry+https://github.com/rust-lang/crates.io-index)",
  "solana-svm-feature-set",
  "solana-svm-log-collector",
  "solana-svm-measure",
@@ -3695,12 +3714,11 @@ dependencies = [
 [[package]]
 name = "solana-clock"
 version = "3.0.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "fb62e9381182459a4520b5fe7fb22d423cae736239a6427fc398a88743d0ed59"
+source = "git+https://github.com/anza-xyz/solana-sdk.git#94b5923e5572963d90572a4dfd47a4c77c817eaa"
 dependencies = [
  "serde",
  "serde_derive",
- "solana-sdk-ids 3.0.0",
+ "solana-sdk-ids 3.0.0 (git+https://github.com/anza-xyz/solana-sdk.git)",
  "solana-sdk-macro 3.0.0",
  "solana-sysvar-id 3.0.0",
 ]
@@ -3716,8 +3734,8 @@ dependencies = [
 
 [[package]]
 name = "solana-compute-budget"
-version = "3.0.0"
-source = "git+https://github.com/anza-xyz/agave.git#2471624e18fc6df49178e1481ed8243e73413d0f"
+version = "3.1.0"
+source = "git+https://github.com/anza-xyz/agave.git#47c0383f2301e5a739543c1af9992ae182b7e06c"
 dependencies = [
  "solana-fee-structure",
  "solana-program-runtime",
@@ -3735,7 +3753,7 @@ dependencies = [
  "solana-account 3.0.0",
  "solana-instruction 3.0.0",
  "solana-pubkey 3.0.0",
- "solana-sdk-ids 3.0.0",
+ "solana-sdk-ids 3.0.0 (registry+https://github.com/rust-lang/crates.io-index)",
  "solana-short-vec 3.0.0",
  "solana-system-interface 2.0.0",
 ]
@@ -3761,7 +3779,7 @@ source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "16238feb63d1cbdf915fb287f29ef7a7ebf81469bd6214f8b72a53866b593f8f"
 dependencies = [
  "solana-account-info 3.0.0",
- "solana-define-syscall 3.0.0",
+ "solana-define-syscall 3.0.0 (registry+https://github.com/rust-lang/crates.io-index)",
  "solana-instruction 3.0.0",
  "solana-program-error 3.0.0",
  "solana-pubkey 3.0.0",
@@ -3784,13 +3802,13 @@ dependencies = [
 
 [[package]]
 name = "solana-curve25519"
-version = "3.0.0"
-source = "git+https://github.com/anza-xyz/agave.git#2471624e18fc6df49178e1481ed8243e73413d0f"
+version = "3.1.0"
+source = "git+https://github.com/anza-xyz/agave.git#47c0383f2301e5a739543c1af9992ae182b7e06c"
 dependencies = [
  "bytemuck",
  "bytemuck_derive",
  "curve25519-dalek 4.1.3",
- "solana-define-syscall 3.0.0",
+ "solana-define-syscall 3.0.0 (registry+https://github.com/rust-lang/crates.io-index)",
  "subtle",
  "thiserror 2.0.16",
 ]
@@ -3816,6 +3834,11 @@ version = "3.0.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "f9697086a4e102d28a156b8d6b521730335d6951bd39a5e766512bbe09007cee"
 
+[[package]]
+name = "solana-define-syscall"
+version = "3.0.0"
+source = "git+https://github.com/anza-xyz/solana-sdk.git#94b5923e5572963d90572a4dfd47a4c77c817eaa"
+
 [[package]]
 name = "solana-derivation-path"
 version = "2.2.1"
@@ -3836,7 +3859,7 @@ dependencies = [
  "bytemuck",
  "bytemuck_derive",
  "solana-instruction 3.0.0",
- "solana-sdk-ids 3.0.0",
+ "solana-sdk-ids 3.0.0 (registry+https://github.com/rust-lang/crates.io-index)",
 ]
 
 [[package]]
@@ -3856,13 +3879,12 @@ dependencies = [
 [[package]]
 name = "solana-epoch-rewards"
 version = "3.0.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "b319a4ed70390af911090c020571f0ff1f4ec432522d05ab89f5c08080381995"
+source = "git+https://github.com/anza-xyz/solana-sdk.git#94b5923e5572963d90572a4dfd47a4c77c817eaa"
 dependencies = [
  "serde",
  "serde_derive",
  "solana-hash 3.0.0",
- "solana-sdk-ids 3.0.0",
+ "solana-sdk-ids 3.0.0 (git+https://github.com/anza-xyz/solana-sdk.git)",
  "solana-sdk-macro 3.0.0",
  "solana-sysvar-id 3.0.0",
 ]
@@ -3883,12 +3905,11 @@ dependencies = [
 [[package]]
 name = "solana-epoch-schedule"
 version = "3.0.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "6e5481e72cc4d52c169db73e4c0cd16de8bc943078aac587ec4817a75cc6388f"
+source = "git+https://github.com/anza-xyz/solana-sdk.git#94b5923e5572963d90572a4dfd47a4c77c817eaa"
 dependencies = [
  "serde",
  "serde_derive",
- "solana-sdk-ids 3.0.0",
+ "solana-sdk-ids 3.0.0 (git+https://github.com/anza-xyz/solana-sdk.git)",
  "solana-sdk-macro 3.0.0",
  "solana-sysvar-id 3.0.0",
 ]
@@ -3949,6 +3970,14 @@ name = "solana-fee-calculator"
 version = "3.0.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "2a73cc03ca4bed871ca174558108835f8323e85917bb38b9c81c7af2ab853efe"
+dependencies = [
+ "log",
+]
+
+[[package]]
+name = "solana-fee-calculator"
+version = "3.0.0"
+source = "git+https://github.com/anza-xyz/solana-sdk.git#94b5923e5572963d90572a4dfd47a4c77c817eaa"
 dependencies = [
  "log",
  "serde",
@@ -3974,15 +4003,15 @@ dependencies = [
  "solana-clock 3.0.0",
  "solana-cluster-type",
  "solana-epoch-schedule 3.0.0",
- "solana-fee-calculator 3.0.0",
+ "solana-fee-calculator 3.0.0 (registry+https://github.com/rust-lang/crates.io-index)",
  "solana-hash 3.0.0",
  "solana-inflation",
  "solana-keypair",
  "solana-poh-config",
  "solana-pubkey 3.0.0",
  "solana-rent 3.0.0",
- "solana-sdk-ids 3.0.0",
- "solana-sha256-hasher 3.0.0",
+ "solana-sdk-ids 3.0.0 (registry+https://github.com/rust-lang/crates.io-index)",
+ "solana-sha256-hasher 3.0.0 (registry+https://github.com/rust-lang/crates.io-index)",
  "solana-shred-version",
  "solana-signer 3.0.0",
  "solana-time-utils",
@@ -4015,8 +4044,7 @@ dependencies = [
 [[package]]
 name = "solana-hash"
 version = "3.0.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "8a063723b9e84c14d8c0d2cdf0268207dc7adecf546e31251f9e07c7b00b566c"
+source = "git+https://github.com/anza-xyz/solana-sdk.git#94b5923e5572963d90572a4dfd47a4c77c817eaa"
 dependencies = [
  "bytemuck",
  "bytemuck_derive",
@@ -4054,13 +4082,12 @@ dependencies = [
 [[package]]
 name = "solana-instruction"
 version = "3.0.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "8df4e8fcba01d7efa647ed20a081c234475df5e11a93acb4393cc2c9a7b99bab"
+source = "git+https://github.com/anza-xyz/solana-sdk.git#94b5923e5572963d90572a4dfd47a4c77c817eaa"
 dependencies = [
  "bincode",
  "serde",
  "serde_derive",
- "solana-define-syscall 3.0.0",
+ "solana-define-syscall 3.0.0 (git+https://github.com/anza-xyz/solana-sdk.git)",
  "solana-instruction-error",
  "solana-pubkey 3.0.0",
 ]
@@ -4068,8 +4095,7 @@ dependencies = [
 [[package]]
 name = "solana-instruction-error"
 version = "2.0.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "b1f0d483b8ae387178d9210e0575b666b05cdd4bd0f2f188128249f6e454d39d"
+source = "git+https://github.com/anza-xyz/solana-sdk.git#94b5923e5572963d90572a4dfd47a4c77c817eaa"
 dependencies = [
  "num-traits",
  "solana-program-error 3.0.0",
@@ -4105,7 +4131,7 @@ dependencies = [
  "solana-program-error 3.0.0",
  "solana-pubkey 3.0.0",
  "solana-sanitize 3.0.0",
- "solana-sdk-ids 3.0.0",
+ "solana-sdk-ids 3.0.0 (registry+https://github.com/rust-lang/crates.io-index)",
  "solana-serialize-utils 3.0.0",
  "solana-sysvar-id 3.0.0",
 ]
@@ -4129,7 +4155,7 @@ source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "57eebd3012946913c8c1b8b43cdf8a6249edb09c0b6be3604ae910332a3acd97"
 dependencies = [
  "sha3",
- "solana-define-syscall 3.0.0",
+ "solana-define-syscall 3.0.0 (registry+https://github.com/rust-lang/crates.io-index)",
  "solana-hash 3.0.0",
 ]
 
@@ -4164,12 +4190,11 @@ dependencies = [
 [[package]]
 name = "solana-last-restart-slot"
 version = "3.0.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "dcda154ec827f5fc1e4da0af3417951b7e9b8157540f81f936c4a8b1156134d0"
+source = "git+https://github.com/anza-xyz/solana-sdk.git#94b5923e5572963d90572a4dfd47a4c77c817eaa"
 dependencies = [
  "serde",
  "serde_derive",
- "solana-sdk-ids 3.0.0",
+ "solana-sdk-ids 3.0.0 (git+https://github.com/anza-xyz/solana-sdk.git)",
  "solana-sdk-macro 3.0.0",
  "solana-sysvar-id 3.0.0",
 ]
@@ -4228,7 +4253,7 @@ dependencies = [
  "serde_derive",
  "solana-instruction 3.0.0",
  "solana-pubkey 3.0.0",
- "solana-sdk-ids 3.0.0",
+ "solana-sdk-ids 3.0.0 (registry+https://github.com/rust-lang/crates.io-index)",
 ]
 
 [[package]]
@@ -4257,7 +4282,7 @@ dependencies = [
  "serde_derive",
  "solana-instruction 3.0.0",
  "solana-pubkey 3.0.0",
- "solana-sdk-ids 3.0.0",
+ "solana-sdk-ids 3.0.0 (registry+https://github.com/rust-lang/crates.io-index)",
  "solana-system-interface 2.0.0",
 ]
 
@@ -4300,15 +4325,14 @@ dependencies = [
 [[package]]
 name = "solana-message"
 version = "3.0.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "2c33e9fa7871147ac3235a7320386afa2dc64bbb21ca3cf9d79a6f6827313176"
+source = "git+https://github.com/anza-xyz/solana-sdk.git#94b5923e5572963d90572a4dfd47a4c77c817eaa"
 dependencies = [
  "lazy_static",
  "solana-hash 3.0.0",
  "solana-instruction 3.0.0",
  "solana-pubkey 3.0.0",
  "solana-sanitize 3.0.0",
- "solana-sdk-ids 3.0.0",
+ "solana-sdk-ids 3.0.0 (git+https://github.com/anza-xyz/solana-sdk.git)",
  "solana-transaction-error 3.0.0",
 ]
 
@@ -4327,7 +4351,15 @@ version = "3.0.0"
 source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "264275c556ea7e22b9d3f87d56305546a38d4eee8ec884f3b126236cb7dcbbb4"
 dependencies = [
- "solana-define-syscall 3.0.0",
+ "solana-define-syscall 3.0.0 (registry+https://github.com/rust-lang/crates.io-index)",
+]
+
+[[package]]
+name = "solana-msg"
+version = "3.0.0"
+source = "git+https://github.com/anza-xyz/solana-sdk.git#94b5923e5572963d90572a4dfd47a4c77c817eaa"
+dependencies = [
+ "solana-define-syscall 3.0.0 (git+https://github.com/anza-xyz/solana-sdk.git)",
 ]
 
 [[package]]
@@ -4359,27 +4391,25 @@ dependencies = [
 [[package]]
 name = "solana-nonce"
 version = "3.0.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "abbdc6c8caf1c08db9f36a50967539d0f72b9f1d4aea04fec5430f532e5afadc"
+source = "git+https://github.com/anza-xyz/solana-sdk.git#94b5923e5572963d90572a4dfd47a4c77c817eaa"
 dependencies = [
  "serde",
  "serde_derive",
- "solana-fee-calculator 3.0.0",
+ "solana-fee-calculator 3.0.0 (git+https://github.com/anza-xyz/solana-sdk.git)",
  "solana-hash 3.0.0",
  "solana-pubkey 3.0.0",
- "solana-sha256-hasher 3.0.0",
+ "solana-sha256-hasher 3.0.0 (git+https://github.com/anza-xyz/solana-sdk.git)",
 ]
 
 [[package]]
 name = "solana-nonce-account"
 version = "3.0.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "805fd25b29e5a1a0e6c3dd6320c9da80f275fbe4ff6e392617c303a2085c435e"
+source = "git+https://github.com/anza-xyz/solana-sdk.git#94b5923e5572963d90572a4dfd47a4c77c817eaa"
 dependencies = [
  "solana-account 3.0.0",
  "solana-hash 3.0.0",
  "solana-nonce 3.0.0",
- "solana-sdk-ids 3.0.0",
+ "solana-sdk-ids 3.0.0 (git+https://github.com/anza-xyz/solana-sdk.git)",
 ]
 
 [[package]]
@@ -4399,12 +4429,12 @@ checksum = "2f1fef1f2ff2480fdbcc64bef5e3c47bec6e1647270db88b43f23e3a55f8d9cf"
 
 [[package]]
 name = "solana-poseidon"
-version = "3.0.0"
-source = "git+https://github.com/anza-xyz/agave.git#2471624e18fc6df49178e1481ed8243e73413d0f"
+version = "3.1.0"
+source = "git+https://github.com/anza-xyz/agave.git#47c0383f2301e5a739543c1af9992ae182b7e06c"
 dependencies = [
  "ark-bn254",
  "light-poseidon",
- "solana-define-syscall 3.0.0",
+ "solana-define-syscall 3.0.0 (registry+https://github.com/rust-lang/crates.io-index)",
  "thiserror 2.0.16",
 ]
 
@@ -4512,12 +4542,11 @@ dependencies = [
 [[package]]
 name = "solana-program-entrypoint"
 version = "3.1.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "6557cf5b5e91745d1667447438a1baa7823c6086e4ece67f8e6ebfa7a8f72660"
+source = "git+https://github.com/anza-xyz/solana-sdk.git#94b5923e5572963d90572a4dfd47a4c77c817eaa"
 dependencies = [
  "solana-account-info 3.0.0",
- "solana-define-syscall 3.0.0",
- "solana-msg 3.0.0",
+ "solana-define-syscall 3.0.0 (git+https://github.com/anza-xyz/solana-sdk.git)",
+ "solana-msg 3.0.0 (git+https://github.com/anza-xyz/solana-sdk.git)",
  "solana-program-error 3.0.0",
  "solana-pubkey 3.0.0",
 ]
@@ -4541,8 +4570,7 @@ dependencies = [
 [[package]]
 name = "solana-program-error"
 version = "3.0.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "a1af32c995a7b692a915bb7414d5f8e838450cf7c70414e763d8abcae7b51f28"
+source = "git+https://github.com/anza-xyz/solana-sdk.git#94b5923e5572963d90572a4dfd47a4c77c817eaa"
 
 [[package]]
 name = "solana-program-memory"
@@ -4556,10 +4584,9 @@ dependencies = [
 [[package]]
 name = "solana-program-memory"
 version = "3.0.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "10e5660c60749c7bfb30b447542529758e4dbcecd31b1e8af1fdc92e2bdde90a"
+source = "git+https://github.com/anza-xyz/solana-sdk.git#94b5923e5572963d90572a4dfd47a4c77c817eaa"
 dependencies = [
- "solana-define-syscall 3.0.0",
+ "solana-define-syscall 3.0.0 (git+https://github.com/anza-xyz/solana-sdk.git)",
 ]
 
 [[package]]
@@ -4579,8 +4606,8 @@ dependencies = [
 
 [[package]]
 name = "solana-program-runtime"
-version = "3.0.0"
-source = "git+https://github.com/anza-xyz/agave.git#2471624e18fc6df49178e1481ed8243e73413d0f"
+version = "3.1.0"
+source = "git+https://github.com/anza-xyz/agave.git#47c0383f2301e5a739543c1af9992ae182b7e06c"
 dependencies = [
  "base64 0.22.1",
  "bincode",
@@ -4601,9 +4628,9 @@ dependencies = [
  "solana-pubkey 3.0.0",
  "solana-rent 3.0.0",
  "solana-sbpf",
- "solana-sdk-ids 3.0.0",
+ "solana-sdk-ids 3.0.0 (registry+https://github.com/rust-lang/crates.io-index)",
  "solana-slot-hashes 3.0.0",
- "solana-stake-interface 2.0.0",
+ "solana-stake-interface 2.0.1",
  "solana-svm-callback",
  "solana-svm-feature-set",
  "solana-svm-log-collector",
@@ -4647,8 +4674,7 @@ dependencies = [
 [[package]]
 name = "solana-pubkey"
 version = "3.0.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "8909d399deb0851aa524420beeb5646b115fd253ef446e35fe4504c904da3941"
+source = "git+https://github.com/anza-xyz/solana-sdk.git#94b5923e5572963d90572a4dfd47a4c77c817eaa"
 dependencies = [
  "solana-address",
 ]
@@ -4669,12 +4695,11 @@ dependencies = [
 [[package]]
 name = "solana-rent"
 version = "3.0.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "b702d8c43711e3c8a9284a4f1bbc6a3de2553deb25b0c8142f9a44ef0ce5ddc1"
+source = "git+https://github.com/anza-xyz/solana-sdk.git#94b5923e5572963d90572a4dfd47a4c77c817eaa"
 dependencies = [
  "serde",
  "serde_derive",
- "solana-sdk-ids 3.0.0",
+ "solana-sdk-ids 3.0.0 (git+https://github.com/anza-xyz/solana-sdk.git)",
  "solana-sdk-macro 3.0.0",
  "solana-sysvar-id 3.0.0",
 ]
@@ -4688,8 +4713,7 @@ checksum = "61f1bc1357b8188d9c4a3af3fc55276e56987265eb7ad073ae6f8180ee54cecf"
 [[package]]
 name = "solana-sanitize"
 version = "3.0.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "927e833259588ac8f860861db0f6e2668c3cc46d917798ade116858960acfe8a"
+source = "git+https://github.com/anza-xyz/solana-sdk.git#94b5923e5572963d90572a4dfd47a4c77c817eaa"
 
 [[package]]
 name = "solana-sbpf"
@@ -4726,6 +4750,14 @@ dependencies = [
  "solana-pubkey 3.0.0",
 ]
 
+[[package]]
+name = "solana-sdk-ids"
+version = "3.0.0"
+source = "git+https://github.com/anza-xyz/solana-sdk.git#94b5923e5572963d90572a4dfd47a4c77c817eaa"
+dependencies = [
+ "solana-pubkey 3.0.0",
+]
+
 [[package]]
 name = "solana-sdk-macro"
 version = "2.2.1"
@@ -4741,8 +4773,7 @@ dependencies = [
 [[package]]
 name = "solana-sdk-macro"
 version = "3.0.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "d6430000e97083460b71d9fbadc52a2ab2f88f53b3a4c5e58c5ae3640a0e8c00"
+source = "git+https://github.com/anza-xyz/solana-sdk.git#94b5923e5572963d90572a4dfd47a4c77c817eaa"
 dependencies = [
  "bs58",
  "proc-macro2",
@@ -4763,7 +4794,7 @@ dependencies = [
  "serde_derive",
  "sha3",
  "solana-instruction 3.0.0",
- "solana-sdk-ids 3.0.0",
+ "solana-sdk-ids 3.0.0 (registry+https://github.com/rust-lang/crates.io-index)",
  "solana-signature 3.1.0",
 ]
 
@@ -4785,7 +4816,7 @@ source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "394a4470477d66296af5217970a905b1c5569032a7732c367fb69e5666c8607e"
 dependencies = [
  "k256",
- "solana-define-syscall 3.0.0",
+ "solana-define-syscall 3.0.0 (registry+https://github.com/rust-lang/crates.io-index)",
  "thiserror 2.0.16",
 ]
 
@@ -4798,7 +4829,7 @@ dependencies = [
  "bytemuck",
  "openssl",
  "solana-instruction 3.0.0",
- "solana-sdk-ids 3.0.0",
+ "solana-sdk-ids 3.0.0 (registry+https://github.com/rust-lang/crates.io-index)",
 ]
 
 [[package]]
@@ -4896,7 +4927,17 @@ source = "registry+https://github.com/rust-lang/crates.io-index"
 checksum = "a9b912ba6f71cb202c0c3773ec77bf898fa9fe0c78691a2d6859b3b5b8954719"
 dependencies = [
  "sha2 0.10.9",
- "solana-define-syscall 3.0.0",
+ "solana-define-syscall 3.0.0 (registry+https://github.com/rust-lang/crates.io-index)",
+ "solana-hash 3.0.0",
+]
+
+[[package]]
+name = "solana-sha256-hasher"
+version = "3.0.0"
+source = "git+https://github.com/anza-xyz/solana-sdk.git#94b5923e5572963d90572a4dfd47a4c77c817eaa"
+dependencies = [
+ "sha2 0.10.9",
+ "solana-define-syscall 3.0.0 (git+https://github.com/anza-xyz/solana-sdk.git)",
  "solana-hash 3.0.0",
 ]
 
@@ -4926,7 +4967,7 @@ checksum = "94953e22ca28fe4541a3447d6baeaf519cc4ddc063253bfa673b721f34c136bb"
 dependencies = [
  "solana-hard-forks",
  "solana-hash 3.0.0",
- "solana-sha256-hasher 3.0.0",
+ "solana-sha256-hasher 3.0.0 (registry+https://github.com/rust-lang/crates.io-index)",
 ]
 
 [[package]]
@@ -4942,8 +4983,7 @@ dependencies = [
 [[package]]
 name = "solana-signature"
 version = "3.1.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "4bb8057cc0e9f7b5e89883d49de6f407df655bb6f3a71d0b7baf9986a2218fd9"
+source = "git+https://github.com/anza-xyz/solana-sdk.git#94b5923e5572963d90572a4dfd47a4c77c817eaa"
 dependencies = [
  "ed25519-dalek 2.2.0",
  "five8",
@@ -4964,8 +5004,7 @@ dependencies = [
 [[package]]
 name = "solana-signer"
 version = "3.0.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "5bfea97951fee8bae0d6038f39a5efcb6230ecdfe33425ac75196d1a1e3e3235"
+source = "git+https://github.com/anza-xyz/solana-sdk.git#94b5923e5572963d90572a4dfd47a4c77c817eaa"
 dependencies = [
  "solana-pubkey 3.0.0",
  "solana-signature 3.1.0",
@@ -4988,13 +5027,12 @@ dependencies = [
 [[package]]
 name = "solana-slot-hashes"
 version = "3.0.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "80a293f952293281443c04f4d96afd9d547721923d596e92b4377ed2360f1746"
+source = "git+https://github.com/anza-xyz/solana-sdk.git#94b5923e5572963d90572a4dfd47a4c77c817eaa"
 dependencies = [
  "serde",
  "serde_derive",
  "solana-hash 3.0.0",
- "solana-sdk-ids 3.0.0",
+ "solana-sdk-ids 3.0.0 (git+https://github.com/anza-xyz/solana-sdk.git)",
  "solana-sysvar-id 3.0.0",
 ]
 
@@ -5014,13 +5052,12 @@ dependencies = [
 [[package]]
 name = "solana-slot-history"
 version = "3.0.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "f914f6b108f5bba14a280b458d023e3621c9973f27f015a4d755b50e88d89e97"
+source = "git+https://github.com/anza-xyz/solana-sdk.git#94b5923e5572963d90572a4dfd47a4c77c817eaa"
 dependencies = [
  "bv",
  "serde",
  "serde_derive",
- "solana-sdk-ids 3.0.0",
+ "solana-sdk-ids 3.0.0 (git+https://github.com/anza-xyz/solana-sdk.git)",
  "solana-sysvar-id 3.0.0",
 ]
 
@@ -5067,9 +5104,9 @@ dependencies = [
 
 [[package]]
 name = "solana-stake-interface"
-version = "2.0.0"
+version = "2.0.1"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "9fd582fe900e43db96651a5b43956b8ebfab1944d091b391d89140635900ef46"
+checksum = "f6f912ae679b683365348dea482dbd9468d22ff258b554fd36e3d3683c2122e3"
 dependencies = [
  "num-traits",
  "serde",
@@ -5086,8 +5123,8 @@ dependencies = [
 
 [[package]]
 name = "solana-stake-program"
-version = "3.0.0"
-source = "git+https://github.com/anza-xyz/agave.git#2471624e18fc6df49178e1481ed8243e73413d0f"
+version = "3.1.0"
+source = "git+https://github.com/anza-xyz/agave.git#47c0383f2301e5a739543c1af9992ae182b7e06c"
 dependencies = [
  "agave-feature-set",
  "bincode",
@@ -5103,8 +5140,8 @@ dependencies = [
  "solana-program-runtime",
  "solana-pubkey 3.0.0",
  "solana-rent 3.0.0",
- "solana-sdk-ids 3.0.0",
- "solana-stake-interface 2.0.0",
+ "solana-sdk-ids 3.0.0 (registry+https://github.com/rust-lang/crates.io-index)",
+ "solana-stake-interface 2.0.1",
  "solana-svm-log-collector",
  "solana-svm-type-overrides",
  "solana-sysvar 3.0.0",
@@ -5114,8 +5151,8 @@ dependencies = [
 
 [[package]]
 name = "solana-svm-callback"
-version = "3.0.0"
-source = "git+https://github.com/anza-xyz/agave.git#2471624e18fc6df49178e1481ed8243e73413d0f"
+version = "3.1.0"
+source = "git+https://github.com/anza-xyz/agave.git#47c0383f2301e5a739543c1af9992ae182b7e06c"
 dependencies = [
  "solana-account 3.0.0",
  "solana-clock 3.0.0",
@@ -5125,41 +5162,41 @@ dependencies = [
 
 [[package]]
 name = "solana-svm-feature-set"
-version = "3.0.0"
-source = "git+https://github.com/anza-xyz/agave.git#2471624e18fc6df49178e1481ed8243e73413d0f"
+version = "3.1.0"
+source = "git+https://github.com/anza-xyz/agave.git#47c0383f2301e5a739543c1af9992ae182b7e06c"
 
 [[package]]
 name = "solana-svm-log-collector"
-version = "3.0.0"
-source = "git+https://github.com/anza-xyz/agave.git#2471624e18fc6df49178e1481ed8243e73413d0f"
+version = "3.1.0"
+source = "git+https://github.com/anza-xyz/agave.git#47c0383f2301e5a739543c1af9992ae182b7e06c"
 dependencies = [
  "log",
 ]
 
 [[package]]
 name = "solana-svm-measure"
-version = "3.0.0"
-source = "git+https://github.com/anza-xyz/agave.git#2471624e18fc6df49178e1481ed8243e73413d0f"
+version = "3.1.0"
+source = "git+https://github.com/anza-xyz/agave.git#47c0383f2301e5a739543c1af9992ae182b7e06c"
 
 [[package]]
 name = "solana-svm-metrics"
-version = "3.0.0"
-source = "git+https://github.com/anza-xyz/agave.git#2471624e18fc6df49178e1481ed8243e73413d0f"
+version = "3.1.0"
+source = "git+https://github.com/anza-xyz/agave.git#47c0383f2301e5a739543c1af9992ae182b7e06c"
 dependencies = [
  "crossbeam-channel",
  "gethostname",
  "log",
  "reqwest",
  "solana-cluster-type",
- "solana-sha256-hasher 3.0.0",
+ "solana-sha256-hasher 3.0.0 (registry+https://github.com/rust-lang/crates.io-index)",
  "solana-time-utils",
  "thiserror 2.0.16",
 ]
 
 [[package]]
 name = "solana-svm-timings"
-version = "3.0.0"
-source = "git+https://github.com/anza-xyz/agave.git#2471624e18fc6df49178e1481ed8243e73413d0f"
+version = "3.1.0"
+source = "git+https://github.com/anza-xyz/agave.git#47c0383f2301e5a739543c1af9992ae182b7e06c"
 dependencies = [
  "eager",
  "enum-iterator",
@@ -5168,21 +5205,21 @@ dependencies = [
 
 [[package]]
 name = "solana-svm-transaction"
-version = "3.0.0"
-source = "git+https://github.com/anza-xyz/agave.git#2471624e18fc6df49178e1481ed8243e73413d0f"
+version = "3.1.0"
+source = "git+https://github.com/anza-xyz/agave.git#47c0383f2301e5a739543c1af9992ae182b7e06c"
 dependencies = [
  "solana-hash 3.0.0",
  "solana-message 3.0.0",
  "solana-pubkey 3.0.0",
- "solana-sdk-ids 3.0.0",
+ "solana-sdk-ids 3.0.0 (registry+https://github.com/rust-lang/crates.io-index)",
  "solana-signature 3.1.0",
  "solana-transaction",
 ]
 
 [[package]]
 name = "solana-svm-type-overrides"
-version = "3.0.0"
-source = "git+https://github.com/anza-xyz/agave.git#2471624e18fc6df49178e1481ed8243e73413d0f"
+version = "3.1.0"
+source = "git+https://github.com/anza-xyz/agave.git#47c0383f2301e5a739543c1af9992ae182b7e06c"
 dependencies = [
  "rand 0.8.5",
 ]
@@ -5213,15 +5250,15 @@ dependencies = [
  "serde",
  "serde_derive",
  "solana-instruction 3.0.0",
- "solana-msg 3.0.0",
+ "solana-msg 3.0.0 (registry+https://github.com/rust-lang/crates.io-index)",
  "solana-program-error 3.0.0",
  "solana-pubkey 3.0.0",
 ]
 
 [[package]]
 name = "solana-system-program"
-version = "3.0.0"
-source = "git+https://github.com/anza-xyz/agave.git#2471624e18fc6df49178e1481ed8243e73413d0f"
+version = "3.1.0"
+source = "git+https://github.com/anza-xyz/agave.git#47c0383f2301e5a739543c1af9992ae182b7e06c"
 dependencies = [
  "bincode",
  "log",
@@ -5229,14 +5266,14 @@ dependencies = [
  "serde_derive",
  "solana-account 3.0.0",
  "solana-bincode 3.0.0",
- "solana-fee-calculator 3.0.0",
+ "solana-fee-calculator 3.0.0 (registry+https://github.com/rust-lang/crates.io-index)",
  "solana-instruction 3.0.0",
  "solana-nonce 3.0.0",
  "solana-nonce-account",
  "solana-packet",
  "solana-program-runtime",
  "solana-pubkey 3.0.0",
- "solana-sdk-ids 3.0.0",
+ "solana-sdk-ids 3.0.0 (registry+https://github.com/rust-lang/crates.io-index)",
  "solana-svm-log-collector",
  "solana-svm-type-overrides",
  "solana-system-interface 2.0.0",
@@ -5284,8 +5321,7 @@ dependencies = [
 [[package]]
 name = "solana-sysvar"
 version = "3.0.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "63205e68d680bcc315337dec311b616ab32fea0a612db3b883ce4de02e0953f9"
+source = "git+https://github.com/anza-xyz/solana-sdk.git#94b5923e5572963d90572a4dfd47a4c77c817eaa"
 dependencies = [
  "base64 0.22.1",
  "bincode",
@@ -5294,10 +5330,10 @@ dependencies = [
  "serde_derive",
  "solana-account-info 3.0.0",
  "solana-clock 3.0.0",
- "solana-define-syscall 3.0.0",
+ "solana-define-syscall 3.0.0 (git+https://github.com/anza-xyz/solana-sdk.git)",
  "solana-epoch-rewards 3.0.0",
  "solana-epoch-schedule 3.0.0",
- "solana-fee-calculator 3.0.0",
+ "solana-fee-calculator 3.0.0 (git+https://github.com/anza-xyz/solana-sdk.git)",
  "solana-hash 3.0.0",
  "solana-instruction 3.0.0",
  "solana-last-restart-slot 3.0.0",
@@ -5306,7 +5342,7 @@ dependencies = [
  "solana-program-memory 3.0.0",
  "solana-pubkey 3.0.0",
  "solana-rent 3.0.0",
- "solana-sdk-ids 3.0.0",
+ "solana-sdk-ids 3.0.0 (git+https://github.com/anza-xyz/solana-sdk.git)",
  "solana-sdk-macro 3.0.0",
  "solana-slot-hashes 3.0.0",
  "solana-slot-history 3.0.0",
@@ -5326,11 +5362,10 @@ dependencies = [
 [[package]]
 name = "solana-sysvar-id"
 version = "3.0.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "5051bc1a16d5d96a96bc33b5b2ec707495c48fe978097bdaba68d3c47987eb32"
+source = "git+https://github.com/anza-xyz/solana-sdk.git#94b5923e5572963d90572a4dfd47a4c77c817eaa"
 dependencies = [
  "solana-pubkey 3.0.0",
- "solana-sdk-ids 3.0.0",
+ "solana-sdk-ids 3.0.0 (git+https://github.com/anza-xyz/solana-sdk.git)",
 ]
 
 [[package]]
@@ -5342,23 +5377,22 @@ checksum = "0ced92c60aa76ec4780a9d93f3bd64dfa916e1b998eacc6f1c110f3f444f02c9"
 [[package]]
 name = "solana-transaction"
 version = "3.0.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "2db6ac3984042d9248fd9b06761ece438ed9ba412c001240052ce6216fee3141"
+source = "git+https://github.com/anza-xyz/solana-sdk.git#94b5923e5572963d90572a4dfd47a4c77c817eaa"
 dependencies = [
  "solana-hash 3.0.0",
  "solana-instruction 3.0.0",
  "solana-message 3.0.0",
  "solana-pubkey 3.0.0",
  "solana-sanitize 3.0.0",
- "solana-sdk-ids 3.0.0",
+ "solana-sdk-ids 3.0.0 (git+https://github.com/anza-xyz/solana-sdk.git)",
  "solana-signature 3.1.0",
  "solana-transaction-error 3.0.0",
 ]
 
 [[package]]
 name = "solana-transaction-context"
-version = "3.0.0"
-source = "git+https://github.com/anza-xyz/agave.git#2471624e18fc6df49178e1481ed8243e73413d0f"
+version = "3.1.0"
+source = "git+https://github.com/anza-xyz/agave.git#47c0383f2301e5a739543c1af9992ae182b7e06c"
 dependencies = [
  "bincode",
  "qualifier_attr",
@@ -5370,7 +5404,7 @@ dependencies = [
  "solana-pubkey 3.0.0",
  "solana-rent 3.0.0",
  "solana-sbpf",
- "solana-sdk-ids 3.0.0",
+ "solana-sdk-ids 3.0.0 (registry+https://github.com/rust-lang/crates.io-index)",
 ]
 
 [[package]]
@@ -5386,8 +5420,7 @@ dependencies = [
 [[package]]
 name = "solana-transaction-error"
 version = "3.0.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "4222065402340d7e6aec9dc3e54d22992ddcf923d91edcd815443c2bfca3144a"
+source = "git+https://github.com/anza-xyz/solana-sdk.git#94b5923e5572963d90572a4dfd47a4c77c817eaa"
 dependencies = [
  "solana-instruction-error",
  "solana-sanitize 3.0.0",
@@ -5436,7 +5469,7 @@ dependencies = [
  "solana-instruction-error",
  "solana-pubkey 3.0.0",
  "solana-rent 3.0.0",
- "solana-sdk-ids 3.0.0",
+ "solana-sdk-ids 3.0.0 (registry+https://github.com/rust-lang/crates.io-index)",
  "solana-serde-varint 3.0.0",
  "solana-serialize-utils 3.0.0",
  "solana-short-vec 3.0.0",
@@ -5968,7 +6001,7 @@ dependencies = [
  "solana-program-entrypoint 3.1.0",
  "solana-program-error 3.0.0",
  "solana-pubkey 3.0.0",
- "solana-sdk-ids 3.0.0",
+ "solana-sdk-ids 3.0.0 (registry+https://github.com/rust-lang/crates.io-index)",
  "solana-system-interface 2.0.0",
 ]
 
@@ -6258,13 +6291,14 @@ dependencies = [
 
 [[package]]
 name = "url"
-version = "2.5.5"
+version = "2.5.7"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "ec961601b32b6f5d14ae8dabd35ff2ff2e2c6cb4c0e6641845ff105abe96d958"
+checksum = "08bc136a29a3d1758e07a9cca267be308aeebf5cfd5a10f3f67ab2097683ef5b"
 dependencies = [
  "form_urlencoded",
  "idna",
  "percent-encoding",
+ "serde",
 ]
 
 [[package]]
@@ -6696,9 +6730,9 @@ checksum = "271414315aff87387382ec3d271b52d7ae78726f5d44ac98b4f4030c91880486"
 
 [[package]]
 name = "winnow"
-version = "0.7.12"
+version = "0.7.13"
 source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "f3edebf492c8125044983378ecb5766203ad3b4c2f7a922bd7dd207f6d443e95"
+checksum = "21a0236b59786fed61e2a80582dd500fe61f18b5dca67a4a067d0bc9039339cf"
 dependencies = [
  "memchr",
 ]
diff --git a/Cargo.toml b/Cargo.toml
index f6d4ab2..1708d78 100644
--- a/Cargo.toml
+++ b/Cargo.toml
@@ -78,8 +78,9 @@ solana-rent = "3.0"
 solana-sdk-ids = "3.0"
 solana-secp256k1-program = "3.0"
 solana-secp256r1-program = "3.0"
+solana-sha256-hasher = "3.0"
 solana-slot-hashes = "3.0"
-solana-stake-interface = "1.0"
+solana-stake-interface = "2.0"
 solana-stake-program =  { version = "3.0", git = "https://github.com/anza-xyz/agave.git" }
 solana-svm-callback = { version = "3.0", git = "https://github.com/anza-xyz/agave.git" }
 solana-svm-log-collector = { version = "3.0", git = "https://github.com/anza-xyz/agave.git" }
@@ -89,8 +90,37 @@ solana-system-program = { version = "3.0", git = "https://github.com/anza-xyz/ag
 solana-sysvar = "3.0"
 solana-sysvar-id = "3.0"
 solana-transaction-context = { version = "3.0", git = "https://github.com/anza-xyz/agave.git" }
-spl-associated-token-account = "7.0.0"
+solana-transaction-error = "3.0"
+spl-associated-token-account = "7.0.0" # requires patching for now
 spl-token = "8.0.0"
 thiserror = "1.0.64"
 tokio = "1.37.0"
 which = "=4.4.0"
+
+[patch.crates-io]
+solana-pubkey = { version = "3.0", git = "https://github.com/anza-xyz/solana-sdk.git" }
+solana-program-entrypoint = { version = "3.0", git = "https://github.com/anza-xyz/solana-sdk.git" }
+solana-program-error = { version = "3.0", git = "https://github.com/anza-xyz/solana-sdk.git" }
+solana-sysvar = { version = "3.0", git = "https://github.com/anza-xyz/solana-sdk.git" }
+solana-sysvar-id = { version = "3.0", git = "https://github.com/anza-xyz/solana-sdk.git" }
+solana-account = { version = "3.0", git = "https://github.com/anza-xyz/solana-sdk.git" }
+solana-account-info = { version = "3.0", git = "https://github.com/anza-xyz/solana-sdk.git" }
+solana-instruction = { version = "3.0", git = "https://github.com/anza-xyz/solana-sdk.git" }
+solana-message = { version = "3.0", git = "https://github.com/anza-xyz/solana-sdk.git" }
+solana-instruction-error = { version = "2.0", git = "https://github.com/anza-xyz/solana-sdk.git" }
+solana-transaction-context = { version = "3.0", git = "https://github.com/anza-xyz/agave.git" }
+solana-transaction-error = { version = "3.0", git = "https://github.com/anza-xyz/solana-sdk.git" }
+solana-signer = { version = "3.0", git = "https://github.com/anza-xyz/solana-sdk.git" }
+solana-nonce = { version = "3.0", git = "https://github.com/anza-xyz/solana-sdk.git" }
+solana-bincode = { version = "3.0", git = "https://github.com/anza-xyz/solana-sdk.git" }
+solana-transaction     = { version = "3.0", git = "https://github.com/anza-xyz/solana-sdk.git" }
+solana-sanitize        = { version = "3.0", git = "https://github.com/anza-xyz/solana-sdk.git" }
+solana-hash            = { version = "3.0", git = "https://github.com/anza-xyz/solana-sdk.git" }
+solana-nonce-account   = { version = "3.0", git = "https://github.com/anza-xyz/solana-sdk.git" }
+solana-signature = { version = "3.0", git = "https://github.com/anza-xyz/solana-sdk.git" }
+solana-rent = { version = "3.0", git = "https://github.com/anza-xyz/solana-sdk.git" }
+solana-slot-hashes = { version = "3.0", git = "https://github.com/anza-xyz/solana-sdk.git" }
+solana-epoch-schedule = { version = "3.0", git = "https://github.com/anza-xyz/solana-sdk.git" }
+solana-epoch-rewards = { version = "3.0", git = "https://github.com/anza-xyz/solana-sdk.git" }
+solana-clock = { version = "3.0", git = "https://github.com/anza-xyz/solana-sdk.git" }
+solana-last-restart-slot = { version = "3.0", git = "https://github.com/anza-xyz/solana-sdk.git" }
\ No newline at end of file
diff --git a/harness/Cargo.toml b/harness/Cargo.toml
index 40fd87f..c42b792 100644
--- a/harness/Cargo.toml
+++ b/harness/Cargo.toml
@@ -32,6 +32,7 @@ invocation-inspect-callback = []
 [dependencies]
 agave-feature-set = { workspace = true }
 agave-precompiles = { workspace = true }
+agave-syscalls = { workspace = true }
 bincode = { workspace = true }
 serde = { workspace = true, features = ["derive"], optional = true }
 mollusk-svm-error = { workspace = true }
@@ -57,6 +58,7 @@ solana-program-runtime = { workspace = true }
 solana-pubkey = { workspace = true }
 solana-rent = { workspace = true }
 solana-sdk-ids = { workspace = true }
+solana-sha256-hasher = { workspace = true, features = ["sha2"] }
 solana-slot-hashes = { workspace = true }
 solana-stake-interface = { workspace = true }
 solana-stake-program = { workspace = true, optional = true }
diff --git a/harness/src/epoch_stake.rs b/harness/src/epoch_stake.rs
index 29dcece..454c67e 100644
--- a/harness/src/epoch_stake.rs
+++ b/harness/src/epoch_stake.rs
@@ -20,8 +20,7 @@ pub fn create_mock_epoch_stake(target_total: u64) -> EpochStake {
     let base_stake = target_total / num_accounts;
     let remainder = target_total % num_accounts;
 
-    std::iter::repeat(base_stake)
-        .take(num_accounts as usize - 1)
+    std::iter::repeat_n(base_stake, num_accounts as usize - 1)
         .chain(std::iter::once(base_stake + remainder))
         .for_each(|stake| {
             epoch_stake.insert(Pubkey::new_unique(), stake);
diff --git a/harness/src/fuzz/firedancer.rs b/harness/src/fuzz/firedancer.rs
index d11c865..be60d8c 100644
--- a/harness/src/fuzz/firedancer.rs
+++ b/harness/src/fuzz/firedancer.rs
@@ -23,6 +23,7 @@ use {
     solana_account::Account,
     solana_compute_budget::compute_budget::ComputeBudget,
     solana_instruction::{error::InstructionError, AccountMeta, Instruction},
+    solana_program_error::ProgramError,
     solana_pubkey::Pubkey,
 };
 
@@ -41,22 +42,14 @@ static BUILTIN_PROGRAM_IDS: &[Pubkey] = &[
     solana_sdk_ids::zk_elgamal_proof_program::id(),
 ];
 
-fn instr_err_to_num(error: &InstructionError) -> i32 {
-    // Minimal mapping: preserve custom codes, use 1 for all non-custom errors.
-    match error {
-        InstructionError::Custom(code) => (*code as i32) + 1,
-        _ => 1,
-    }
+fn pe_custom_num() -> i32 {
+    26
 }
 
-fn num_to_instr_err(num: i32, custom_code: u32) -> InstructionError {
-    if custom_code != 0 {
-        InstructionError::Custom(custom_code)
-    } else {
-        // Fallback to a generic error when no custom code is provided.
-        InstructionError::Custom((num.max(1) - 1) as u32)
-    }
-}
+// Firedancer mapping expected by fixtures:
+// - Non-custom errors → result = 2, custom_err = 0
+// - Custom errors     → result = 1000 + code, custom_err = code
+// Remove bespoke conversions. We will carry FD values explicitly.
 
 fn build_fixture_context(
     accounts: &[(Pubkey, Account)],
@@ -152,16 +145,22 @@ pub(crate) fn parse_fixture_context(context: &FuzzContext) -> ParsedFixtureConte
 }
 
 fn build_fixture_effects(context: &FuzzContext, result: &InstructionResult) -> FuzzEffects {
-    let mut program_custom_code = 0;
-    let program_result = match &result.raw_result {
-        Ok(()) => 0,
-        Err(e) => {
-            if let InstructionError::Custom(code) = e {
-                program_custom_code = *code;
-            }
-            instr_err_to_num(e)
-        }
-    };
+    // Prefer explicit FD values carried through the result when available
+    let (program_result, program_custom_code) =
+        match (result.fd_program_result, result.fd_program_custom_code) {
+            (Some(fd_num), Some(fd_custom)) => (fd_num, fd_custom),
+            _ => match &result.raw_result {
+                Ok(()) => (0, 0),
+                Err(e) => match e {
+                    InstructionError::Custom(code) => (pe_custom_num(), *code),
+                    other => {
+                        let pe = ProgramError::try_from(other.clone())
+                            .unwrap_or(ProgramError::InvalidInstructionData);
+                        (u64::from(pe) as i32, 0)
+                    }
+                },
+            },
+        };
 
     let return_data = result.return_data.clone();
 
@@ -199,10 +198,9 @@ pub(crate) fn parse_fixture_effects(
     let raw_result = if effects.program_result == 0 {
         Ok(())
     } else {
-        Err(num_to_instr_err(
-            effects.program_result,
-            effects.program_custom_code,
-        ))
+        // Firedancer encodes errors as a numeric code (e.g., 26 for Custom tag, 1002 for generic)
+        // Tests expect ProgramResult::Failure(Custom(code_numeric)). So wrap the numeric in Custom.
+        Err(InstructionError::Custom(effects.program_result as u32))
     };
 
     let program_result = raw_result.clone().into();
@@ -228,6 +226,10 @@ pub(crate) fn parse_fixture_effects(
         compute_units_consumed: compute_unit_limit.saturating_sub(effects.compute_units_available),
         return_data,
         resulting_accounts,
+        #[cfg(feature = "fuzz")]
+        fd_program_result: Some(effects.program_result),
+        #[cfg(feature = "fuzz")]
+        fd_program_custom_code: Some(effects.program_custom_code),
     }
 }
 
@@ -272,37 +274,3 @@ pub fn load_firedancer_fixture(
     );
     (parsed, result)
 }
-
-#[test]
-fn test_num_to_instr_err() {
-    [
-        InstructionError::InvalidArgument,
-        InstructionError::InvalidInstructionData,
-        InstructionError::InvalidAccountData,
-        InstructionError::AccountDataTooSmall,
-        InstructionError::InsufficientFunds,
-        InstructionError::IncorrectProgramId,
-        InstructionError::MissingRequiredSignature,
-        InstructionError::AccountAlreadyInitialized,
-        InstructionError::UninitializedAccount,
-        InstructionError::UnbalancedInstruction,
-        InstructionError::ModifiedProgramId,
-        InstructionError::Custom(0),
-        InstructionError::Custom(1),
-        InstructionError::Custom(2),
-        InstructionError::Custom(5),
-        InstructionError::Custom(400),
-        InstructionError::Custom(600),
-        InstructionError::Custom(1_000),
-    ]
-    .into_iter()
-    .for_each(|ie| {
-        let mut custom_code = 0;
-        if let InstructionError::Custom(c) = &ie {
-            custom_code = *c;
-        }
-        let result = instr_err_to_num(&ie);
-        let err = num_to_instr_err(result, custom_code);
-        assert_eq!(ie, err);
-    })
-}
diff --git a/harness/src/lib.rs b/harness/src/lib.rs
index b1ab030..0030227 100644
--- a/harness/src/lib.rs
+++ b/harness/src/lib.rs
@@ -466,11 +466,11 @@ use {
     solana_compute_budget::compute_budget::ComputeBudget,
     solana_hash::Hash,
     solana_instruction::{AccountMeta, Instruction},
-    solana_svm_log_collector::LogCollector,
     solana_precompile_error::PrecompileError,
     solana_program_runtime::invoke_context::{EnvironmentConfig, InvokeContext},
     solana_pubkey::Pubkey,
     solana_svm_callback::InvokeContextCallback,
+    solana_svm_log_collector::LogCollector,
     solana_svm_timings::ExecuteTimings,
     solana_transaction_context::TransactionContext,
     std::{cell::RefCell, collections::HashSet, iter::once, rc::Rc},
@@ -741,10 +741,7 @@ impl Mollusk {
                     std::iter::once(instruction.data.as_ref()),
                 )
             } else {
-                invoke_context.process_instruction(
-                    &mut compute_units_consumed,
-                    &mut timings,
-                )
+                invoke_context.process_instruction(&mut compute_units_consumed, &mut timings)
             };
 
             #[cfg(feature = "invocation-inspect-callback")]
@@ -763,12 +760,20 @@ impl Mollusk {
                     transaction_context
                         .find_index_of_account(pubkey)
                         .map(|index| {
-                            let resulting_account = transaction_context
+                            let mut resulting_account: Account = transaction_context
                                 .accounts()
                                 .try_borrow(index)
                                 .unwrap()
                                 .clone()
                                 .into();
+                            // Normalize closed accounts: if system-owned and lamports == 0,
+                            // treat as fully closed with empty data.
+                            if resulting_account.lamports == 0
+                                && resulting_account.owner == solana_sdk_ids::system_program::id()
+                                && !resulting_account.data.is_empty()
+                            {
+                                resulting_account.data = Vec::new();
+                            }
                             (*pubkey, resulting_account)
                         })
                         .unwrap_or((*pubkey, account.clone()))
@@ -778,13 +783,21 @@ impl Mollusk {
             accounts.to_vec()
         };
 
-        InstructionResult {
-            compute_units_consumed,
-            execution_time: timings.details.execute_us.0,
-            program_result: invoke_result.clone().into(),
-            raw_result: invoke_result,
-            return_data,
-            resulting_accounts,
+        {
+            #[allow(unused_mut)]
+            let mut ir = InstructionResult {
+                compute_units_consumed,
+                execution_time: timings.details.execute_us.0,
+                program_result: invoke_result.clone().into(),
+                raw_result: invoke_result,
+                return_data,
+                resulting_accounts,
+                #[cfg(feature = "fuzz")]
+                fd_program_result: None,
+                #[cfg(feature = "fuzz")]
+                fd_program_custom_code: None,
+            };
+            ir
         }
     }
 
@@ -1067,6 +1080,8 @@ impl Mollusk {
         &mut self,
         fixture: &mollusk_svm_fuzz_fixture_firedancer::Fixture,
     ) -> InstructionResult {
+        use mollusk_svm_result::ProgramResult;
+
         let fuzz::firedancer::ParsedFixtureContext {
             accounts,
             compute_budget,
@@ -1085,7 +1100,15 @@ impl Mollusk {
             &fixture.output,
         );
 
-        expected_result.compare_with_config(&result, &Compare::everything(), &self.config);
+        // Adjust actual program_result to FD convention: treat any Custom(_) as Custom(26)
+        let mut actual = result.clone();
+        if let ProgramResult::Failure(solana_program_error::ProgramError::Custom(_)) =
+            actual.program_result
+        {
+            actual.program_result =
+                ProgramResult::Failure(solana_program_error::ProgramError::Custom(26));
+        }
+        expected_result.compare_with_config(&actual, &Compare::everything(), &self.config);
         result
     }
 
@@ -1218,6 +1241,10 @@ impl<AS: AccountStore> MolluskContext<AS> {
             raw_result,
             return_data,
             resulting_accounts,
+            #[cfg(feature = "fuzz")]
+                fd_program_result: _,
+            #[cfg(feature = "fuzz")]
+                fd_program_custom_code: _,
         } = result;
 
         let mut store = self.account_store.borrow_mut();
diff --git a/harness/src/program.rs b/harness/src/program.rs
index d3c4530..51710e6 100644
--- a/harness/src/program.rs
+++ b/harness/src/program.rs
@@ -2,8 +2,8 @@
 
 use {
     agave_feature_set::FeatureSet,
-    solana_account::Account,
     agave_syscalls::create_program_runtime_environment_v1,
+    solana_account::Account,
     solana_compute_budget::compute_budget::ComputeBudget,
     solana_loader_v3_interface::state::UpgradeableLoaderState,
     solana_loader_v4_interface::state::{LoaderV4State, LoaderV4Status},
@@ -269,10 +269,11 @@ pub fn create_program_account_loader_v2(elf: &[u8]) -> Account {
 pub fn create_program_account_loader_v3(program_id: &Pubkey) -> Account {
     let programdata_address =
         Pubkey::find_program_address(&[program_id.as_ref()], &loader_keys::LOADER_V3).0;
-    let data = bincode::serialize(&UpgradeableLoaderState::Program {
-        programdata_address,
-    })
-    .unwrap();
+    // Avoid type mismatches across different solana_pubkey instances by
+    // encoding the state manually: variant (Program = 2) + 32-byte address.
+    let mut data = Vec::with_capacity(4 + 32);
+    data.extend_from_slice(&2u32.to_le_bytes());
+    data.extend_from_slice(&programdata_address.to_bytes());
     let lamports = Rent::default().minimum_balance(data.len());
     Account {
         lamports,
diff --git a/harness/src/sysvar.rs b/harness/src/sysvar.rs
index 1bdb536..17a07e8 100644
--- a/harness/src/sysvar.rs
+++ b/harness/src/sysvar.rs
@@ -58,7 +58,10 @@ impl Default for Sysvars {
 }
 
 impl Sysvars {
-    fn sysvar_account<T: SysvarId + Sysvar + serde::Serialize>(&self, sysvar: &T) -> (Pubkey, Account) {
+    fn sysvar_account<T: SysvarId + Sysvar + serde::Serialize>(
+        &self,
+        sysvar: &T,
+    ) -> (Pubkey, Account) {
         let data = bincode::serialize::<T>(sysvar).unwrap();
         let space = data.len();
         let lamports = self.rent.minimum_balance(space);
diff --git a/harness/tests/bpf_program.rs b/harness/tests/bpf_program.rs
index ebba1b4..6c3c10a 100644
--- a/harness/tests/bpf_program.rs
+++ b/harness/tests/bpf_program.rs
@@ -67,7 +67,7 @@ fn test_write_data() {
         &[(key, account.clone())],
         &[
             Check::success(),
-            Check::compute_units(367),
+            Check::compute_units(387),
             Check::account(&key)
                 .data(data)
                 .lamports(lamports)
@@ -152,7 +152,7 @@ fn test_transfer() {
         ],
         &[
             Check::success(),
-            Check::compute_units(2481),
+            Check::compute_units(2581),
             Check::account(&payer)
                 .lamports(payer_lamports - transfer_amount)
                 .build(),
@@ -256,7 +256,7 @@ fn test_close_account() {
         ],
         &[
             Check::success(),
-            Check::compute_units(2554),
+            Check::compute_units(814),
             Check::account(&key)
                 .closed() // The rest is unnecessary, just testing.
                 .data(&[])
@@ -376,7 +376,7 @@ fn test_cpi() {
         ],
         &[
             Check::success(),
-            Check::compute_units(2347),
+            Check::compute_units(2444),
             Check::account(&key)
                 .data(data)
                 .lamports(lamports)
diff --git a/harness/tests/fd_test_vectors.rs b/harness/tests/fd_test_vectors.rs
index 5341bce..787d055 100644
--- a/harness/tests/fd_test_vectors.rs
+++ b/harness/tests/fd_test_vectors.rs
@@ -149,15 +149,19 @@ fn compare_instruction_accounts(a: &[InstructionAccount], b: &[InstructionAccoun
         return false;
     }
 
-    let mut a_sorted = a.to_vec();
-    let mut b_sorted = b.to_vec();
+    let mut a_mapped: Vec<(u16, bool, bool)> = a
+        .iter()
+        .map(|ia| (ia.index_in_transaction, ia.is_signer(), ia.is_writable()))
+        .collect();
+    let mut b_mapped: Vec<(u16, bool, bool)> = b
+        .iter()
+        .map(|ia| (ia.index_in_transaction, ia.is_signer(), ia.is_writable()))
+        .collect();
 
-    // Sort by Pubkey
-    a_sorted.sort_by(|ia_a, ia_b| ia_a.index_in_transaction.cmp(&ia_b.index_in_transaction));
-    b_sorted.sort_by(|ia_a, ia_b| ia_a.index_in_transaction.cmp(&ia_b.index_in_transaction));
+    a_mapped.sort_unstable();
+    b_mapped.sort_unstable();
 
-    // Compare sorted lists
-    a_sorted == b_sorted
+    a_mapped == b_mapped
 }
 
 fn compare_feature_sets(from_fixture: &FeatureSet, from_mollusk: &FeatureSet) {
diff --git a/harness/tests/precompile.rs b/harness/tests/precompile.rs
index 8709378..91f21db 100644
--- a/harness/tests/precompile.rs
+++ b/harness/tests/precompile.rs
@@ -16,8 +16,18 @@ fn test_secp256k1() {
     let mollusk = Mollusk::default();
     let secret_key = libsecp256k1::SecretKey::random(&mut thread_rng());
 
+    let msg = b"hello";
+    let priv_bytes: [u8; 32] = secret_key.serialize();
+    let (sig64, rec_id) = solana_secp256k1_program::sign_message(&priv_bytes, msg).unwrap();
+    let pubkey = libsecp256k1::PublicKey::from_secret_key(&secret_key);
+    let pubkey_uncompressed = pubkey.serialize(); // 65 bytes: 0x04 || X || Y
+    let mut xy = [0u8; 64];
+    xy.copy_from_slice(&pubkey_uncompressed[1..65]);
+    let eth_addr = solana_secp256k1_program::eth_address_from_pubkey(&xy);
     mollusk.process_and_validate_instruction(
-        &solana_secp256k1_program::new_secp256k1_instruction(&secret_key, b"hello"),
+        &solana_secp256k1_program::new_secp256k1_instruction_with_signature(
+            msg, &sig64, rec_id, &eth_addr,
+        ),
         &[
             (Pubkey::new_unique(), Account::default()),
             (
@@ -29,28 +39,41 @@ fn test_secp256k1() {
     );
 }
 
-#[allow(deprecated)]
 #[test]
 fn test_ed25519() {
     let mollusk = Mollusk::default();
+    use ed25519_dalek::Signer;
     let secret_key = ed25519_dalek::Keypair::generate(&mut thread_rng());
 
+    let msg = b"hello";
+    let signature = secret_key.sign(msg);
+    let pubkey = secret_key.public;
     mollusk.process_and_validate_instruction(
-        &solana_ed25519_program::new_ed25519_instruction(&secret_key, b"hello"),
+        &solana_ed25519_program::new_ed25519_instruction_with_signature(
+            msg,
+            &signature.to_bytes(),
+            &pubkey.to_bytes(),
+        ),
         &[
             (Pubkey::new_unique(), Account::default()),
-            (solana_sdk_ids::ed25519_program::id(), precompile_account()),
+            (
+                solana_sdk_ids::secp256r1_program::id(),
+                precompile_account(),
+            ),
         ],
         &[Check::success()],
     );
 }
 
-#[allow(deprecated)]
 #[test]
 fn test_secp256r1() {
     use openssl::{
-        ec::{EcGroup, EcKey},
+        bn::BigNumContext,
+        ec::{EcGroup, EcKey, PointConversionForm},
+        ecdsa::EcdsaSig,
+        hash::MessageDigest,
         nid::Nid,
+        pkey::PKey,
     };
 
     let mollusk = Mollusk::default();
@@ -60,11 +83,51 @@ fn test_secp256r1() {
         EcKey::generate(&group).unwrap()
     };
 
+    let msg = b"hello";
+    // Sign SHA-256(message) and get DER
+    let pkey = PKey::from_ec_key(secret_key.clone()).unwrap();
+    let mut signer = openssl::sign::Signer::new(MessageDigest::sha256(), &pkey).unwrap();
+    signer.update(msg).unwrap();
+    let der = signer.sign_to_vec().unwrap();
+    // Convert DER to raw (r||s) 64 bytes with low-S canonicalization
+    let sig = EcdsaSig::from_der(&der).unwrap();
+    let mut ctx = BigNumContext::new().unwrap();
+    let mut order = openssl::bn::BigNum::new().unwrap();
+    let group = EcGroup::from_curve_name(Nid::X9_62_PRIME256V1).unwrap();
+    group.order(&mut order, &mut ctx).unwrap();
+    let mut order_minus_s = openssl::bn::BigNum::new().unwrap();
+    order_minus_s.checked_sub(&order, sig.s()).unwrap();
+    let s_ref = if sig.s().ucmp(&order_minus_s) == std::cmp::Ordering::Greater {
+        &order_minus_s
+    } else {
+        sig.s()
+    };
+    let mut r = sig.r().to_vec();
+    let mut s = s_ref.to_vec();
+    if r.len() < 32 {
+        r.splice(0..0, std::iter::repeat(0u8).take(32 - r.len()));
+    }
+    if s.len() < 32 {
+        s.splice(0..0, std::iter::repeat(0u8).take(32 - s.len()));
+    }
+    let mut raw64 = [0u8; 64];
+    raw64[..32].copy_from_slice(&r[..32]);
+    raw64[32..].copy_from_slice(&s[..32]);
+    // Compressed pubkey (33 bytes)
+    let pubkey_point = secret_key.public_key();
+    let compressed = pubkey_point
+        .to_bytes(&group, PointConversionForm::COMPRESSED, &mut ctx)
+        .unwrap();
+    let mut comp33 = [0u8; 33];
+    comp33.copy_from_slice(&compressed);
     mollusk.process_and_validate_instruction(
-        &solana_secp256r1_program::new_secp256r1_instruction(b"hello", secret_key).unwrap(),
+        &solana_secp256r1_program::new_secp256r1_instruction_with_signature(msg, &raw64, &comp33),
         &[
             (Pubkey::new_unique(), Account::default()),
-            (solana_sdk_ids::ed25519_program::id(), precompile_account()),
+            (
+                solana_sdk_ids::secp256r1_program::id(),
+                precompile_account(),
+            ),
         ],
         &[Check::success()],
     );
diff --git a/keys/src/accounts.rs b/keys/src/accounts.rs
index 422e955..47c5451 100644
--- a/keys/src/accounts.rs
+++ b/keys/src/accounts.rs
@@ -36,8 +36,7 @@ pub fn compile_instruction_accounts(
     compiled_instruction
         .accounts
         .iter()
-        .enumerate()
-        .map(|(ix_account_index, &index_in_transaction)| {
+        .map(|&index_in_transaction| {
             let index_in_transaction = index_in_transaction as usize;
             InstructionAccount::new(
                 index_in_transaction as IndexOfAccount,
diff --git a/programs/token/src/associated_token.rs b/programs/token/src/associated_token.rs
index 6430a58..b7e3b14 100644
--- a/programs/token/src/associated_token.rs
+++ b/programs/token/src/associated_token.rs
@@ -1,15 +1,13 @@
 use {
-    mollusk_svm::Mollusk,
-    solana_account::Account,
-    solana_pubkey::Pubkey,
-    spl_associated_token_account::get_associated_token_address_with_program_id,
-    spl_token::{solana_program::program_pack::Pack, state::Account as TokenAccount},
-    solana_rent::Rent,
+    mollusk_svm::Mollusk, solana_account::Account, solana_pubkey::Pubkey, solana_rent::Rent,
+    spl_token::solana_program::program_pack::Pack, spl_token::state::Account as TokenAccount,
 };
 
 pub const ID: Pubkey = solana_pubkey::pubkey!("ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL");
-const TOKEN_PROGRAM_ID: Pubkey = solana_pubkey::pubkey!("TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA");
-const TOKEN_2022_PROGRAM_ID: Pubkey = solana_pubkey::pubkey!("TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb");
+const TOKEN_PROGRAM_ID: Pubkey =
+    solana_pubkey::pubkey!("TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA");
+const TOKEN_2022_PROGRAM_ID: Pubkey =
+    solana_pubkey::pubkey!("TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb");
 
 pub const ELF: &[u8] = include_bytes!("elf/associated_token.so");
 
@@ -32,13 +30,26 @@ pub fn keyed_account() -> (Pubkey, Account) {
     (ID, account())
 }
 
+fn derive_associated_token_address(
+    owner: &Pubkey,
+    mint: &Pubkey,
+    token_program_id: &Pubkey,
+) -> Pubkey {
+    let seeds = &[owner.as_ref(), token_program_id.as_ref(), mint.as_ref()];
+    Pubkey::find_program_address(seeds, &ID).0
+}
+
+fn convert_pubkey(p: &spl_token::solana_program::pubkey::Pubkey) -> Pubkey {
+    Pubkey::new_from_array(p.to_bytes())
+}
+
 /// Create an Associated Token Account
 pub fn create_account_for_associated_token_account(
     token_account_data: TokenAccount,
 ) -> (Pubkey, Account) {
-    let associated_token_address = get_associated_token_address_with_program_id(
-        &token_account_data.owner,
-        &token_account_data.mint,
+    let associated_token_address = derive_associated_token_address(
+        &convert_pubkey(&token_account_data.owner),
+        &convert_pubkey(&token_account_data.mint),
         &TOKEN_PROGRAM_ID,
     );
 
@@ -60,9 +71,9 @@ pub fn create_account_for_associated_token_account(
 pub fn create_account_for_associated_token_2022_account(
     token_account_data: TokenAccount,
 ) -> (Pubkey, Account) {
-    let associated_token_address = get_associated_token_address_with_program_id(
-        &token_account_data.owner,
-        &token_account_data.mint,
+    let associated_token_address = derive_associated_token_address(
+        &convert_pubkey(&token_account_data.owner),
+        &convert_pubkey(&token_account_data.mint),
         &TOKEN_2022_PROGRAM_ID,
     );
 
diff --git a/programs/token/src/token.rs b/programs/token/src/token.rs
index f1f477a..5378f62 100644
--- a/programs/token/src/token.rs
+++ b/programs/token/src/token.rs
@@ -2,9 +2,9 @@ use {
     mollusk_svm::Mollusk,
     solana_account::Account,
     solana_pubkey::Pubkey,
+    solana_rent::Rent,
     spl_token::solana_program::program_pack::Pack,
     spl_token::state::{Account as TokenAccount, Mint},
-    solana_rent::Rent,
 };
 
 pub const ID: Pubkey = solana_pubkey::pubkey!("TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA");
@@ -45,9 +45,7 @@ pub fn create_account_for_mint(mint_data: Mint) -> Account {
 }
 
 /// Create a Token Account
-pub fn create_account_for_token_account(
-    token_account_data: TokenAccount,
-) -> Account {
+pub fn create_account_for_token_account(token_account_data: TokenAccount) -> Account {
     let mut data = vec![0u8; TokenAccount::LEN];
     TokenAccount::pack(token_account_data, &mut data).unwrap();
 
diff --git a/programs/token/src/token2022.rs b/programs/token/src/token2022.rs
index 3a58c5c..b0925e5 100644
--- a/programs/token/src/token2022.rs
+++ b/programs/token/src/token2022.rs
@@ -4,7 +4,7 @@ use {
     solana_pubkey::Pubkey,
     solana_rent::Rent,
     spl_token::solana_program::program_pack::Pack,
-    spl_token::state::{Mint, Account as TokenAccount},
+    spl_token::state::{Account as TokenAccount, Mint},
 };
 
 pub const ID: Pubkey = solana_pubkey::pubkey!("TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb");
@@ -45,9 +45,7 @@ pub fn create_account_for_mint(mint_data: Mint) -> Account {
 }
 
 /// Create a Token Account
-pub fn create_account_for_token_account(
-    token_account_data: TokenAccount,
-) -> Account {
+pub fn create_account_for_token_account(token_account_data: TokenAccount) -> Account {
     let mut data = vec![0u8; TokenAccount::LEN];
     TokenAccount::pack(token_account_data, &mut data).unwrap();
 
@@ -59,4 +57,3 @@ pub fn create_account_for_token_account(
         rent_epoch: 0,
     }
 }
-
diff --git a/result/src/fuzz.rs b/result/src/fuzz.rs
index 429ece4..cc84438 100644
--- a/result/src/fuzz.rs
+++ b/result/src/fuzz.rs
@@ -51,6 +51,10 @@ impl From<&mollusk_svm_fuzz_fixture::effects::Effects> for InstructionResult {
             raw_result,
             return_data,
             resulting_accounts,
+            #[cfg(feature = "fuzz")]
+            fd_program_result: None,
+            #[cfg(feature = "fuzz")]
+            fd_program_custom_code: None,
         }
     }
 }
diff --git a/result/src/types.rs b/result/src/types.rs
index 7b5fac5..6a0dc5a 100644
--- a/result/src/types.rs
+++ b/result/src/types.rs
@@ -57,6 +57,12 @@ pub struct InstructionResult {
     /// they were provided. Any accounts that were modified will maintain
     /// their original position in this list, but with updated state.
     pub resulting_accounts: Vec<(Pubkey, Account)>,
+    #[cfg(feature = "fuzz")]
+    /// Firedancer fixture: original program_result numeric, if provided by a fixture
+    pub fd_program_result: Option<i32>,
+    #[cfg(feature = "fuzz")]
+    /// Firedancer fixture: original program_custom_code numeric, if provided by a fixture
+    pub fd_program_custom_code: Option<u32>,
 }
 
 impl Default for InstructionResult {
@@ -68,6 +74,10 @@ impl Default for InstructionResult {
             raw_result: Ok(()),
             return_data: vec![],
             resulting_accounts: vec![],
+            #[cfg(feature = "fuzz")]
+            fd_program_result: None,
+            #[cfg(feature = "fuzz")]
+            fd_program_custom_code: None,
         }
     }
 }
diff --git a/test-programs/primary/src/lib.rs b/test-programs/primary/src/lib.rs
index 3211011..312c092 100644
--- a/test-programs/primary/src/lib.rs
+++ b/test-programs/primary/src/lib.rs
@@ -66,18 +66,26 @@ fn process_instruction(
                 return Err(ProgramError::MissingRequiredSignature);
             }
 
-            account_info.assign(&solana_sdk_ids::system_program::id());
+            // Zeroize data (best-effort "empty")
+            for byte in account_info.try_borrow_mut_data()?.iter_mut() {
+                *byte = 0;
+            }
 
+            // Zero lamports by moving them to the incinerator directly
             let lamports = account_info.lamports();
+            if lamports > 0 {
+                {
+                    let mut inc_lamports = incinerator_info.try_borrow_mut_lamports()?;
+                    **inc_lamports += lamports;
+                }
+                {
+                    let mut acc_lamports = account_info.try_borrow_mut_lamports()?;
+                    **acc_lamports = 0;
+                }
+            }
 
-            invoke(
-                &solana_system_interface::instruction::transfer(
-                    account_info.key,
-                    &solana_sdk_ids::incinerator::id(),
-                    lamports,
-                ),
-                &[account_info.clone(), incinerator_info.clone()],
-            )?;
+            // Assign to system program so SVM purges the account to empty data at finalize
+            account_info.assign(&solana_sdk_ids::system_program::id());
         }
         Some((4, rest)) if rest.len() >= PUBKEY_BYTES => {
             // Invoke the "CPI Target" test program, which will write the rest
