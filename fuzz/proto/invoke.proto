syntax = "proto3";
package org.mollusk.svm;

import "compute_budget.proto";
import "sysvars.proto";

// A set of feature flags.
message FeatureSet {
    // Every item in this list marks an enabled feature. The value of
    // each item is the first 8 bytes of the feature ID as a little-
    // endian integer.
    repeated fixed64 features = 1;
}

// The complete state of an account excluding its public key.
message AcctState {
    // The account key. Can be omitted if obvious from the context.
    bytes address = 1;

    uint64 lamports = 2;
    bytes data = 3;
    bool executable = 4;
    uint64 rent_epoch = 5;
    bytes owner = 6;
}

message InstrAcct {
    // Selects an account in an external list
    uint32 index = 1;
    bool is_signer = 2;
    bool is_writable = 3;
}

// The execution context of an instruction. Contains all required
// information to independently replay an instruction.
message InstrContext {
    ComputeBudget compute_budget = 1;

    FeatureSet feature_set = 2;

    SysvarContext sysvars = 3;

    // The program invoked.
    bytes program_id = 4;

    // Account access list for this instruction (refers to above accounts list)
    repeated InstrAcct instr_accounts = 5;

    // The input data passed to program execution.
    bytes data = 6;

    // Account state accessed by the instruction.
    repeated AcctState accounts = 7;
}

// The results of executing an InstrContext.
message InstrEffects {
    // Compute units consumed by the instruction.
    uint64 compute_units_consumed = 1;

    // Execution time for instruction.
    uint64 execution_time = 2;

    // Program return code. Zero is success, errors are non-zero.
    uint32 program_result = 3;

    // Copies of accounts that were provided to the instruction. May be in an
    // arbitrary order. The pubkey of each account is unique in this list. Each
    // account address must also be in the InstrContext.
    repeated AcctState resulting_accounts = 4;
}

// An instruction processing test fixture.
message InstrFixture {
    InstrContext input = 1;
    InstrEffects output = 2;
}